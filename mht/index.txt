重复索引：
  1、name - name
  2、name,age - name,age
  3、name - name(10)
  4、name,age - name(10),age
  5、unique(name) - name
  6、列数完全相同，并且列顺序完全相同
冗余索引
  1、
  2、
  3、
  4、
  5、
  6、
冗余索引和重复索引有一些不同，如果创建了索引(A,B)，再创建索引(A)就是冗余索引，因为这只是前一个索引的前缀索引。
因此索引(A,B)也可以当索引(A)来使用(这种冗余只是对B-Tree索引来说)。
冗余索引通常发生在为表添加新索引的时候。例如，有人可能会增加一个新的索引(A,B)而不是扩展已有的索引(A)。
还有一种情况是将一个索引扩展为(A,ID)，其中ID是主键，对于InnoDB来说主键列已经包含在二级索引中了，索引也是冗余的

大多数的情况下都不需要冗余索引，应该尽量扩展已有的索引而不是创建新索引。
但也有时候出于性能方面的考虑需要冗余索引，因为扩展已有的索引会导致其变得太大，从而影响其它使用该索引的查询的性能。

pt-duplicate-key-checker
